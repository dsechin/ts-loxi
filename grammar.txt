program        → declaration* EOF ;

declaration    → varDecl
               | statement ;

varDecl        → "var" IDENTIFIER ( "=" expression )? ";" ;
statement      → exprStmt
               | printStmt ;

exprStmt       → expression ";" ;
printStmt      → "print" expression ";" ;

expression     → conditional ;
conditional    → equality "?" equality ":" equality
               | equality ;

equality       → comparison ( ( "!=" | "==" ) comparison )* ;
comparison     → term ( ( ">" | ">=" | "<" | "<=" ) term )* ;
term           → factor ( ( "-" | "+" ) factor )* ;
factor         → unary ( ( "/" | "*" ) unary )* ;
unary          → ( "!" | "-" ) unary
               | exponentiation ;

exponentiation → primary ( ** primary )* ;

primary        → NUMBER | STRING | "true" | "false" | "nil"
               | "(" expression ")"
               | IDENTIFIER ;




Name 	            Operators 	  Associates
==========================================
Conditional       ?:            Right
Equality 	        == !=   	    Left
Comparison 	      > >= < <= 	  Left
Term 	            - + 	        Left
Factor 	          / * 	        Left
Unary 	          ! - 	        Right
Exponentiation    **            Right